---
import Title from "@src/components/atoms/Title.astro";
import { fetchPlaylist } from "./fetchPlaylist.js";

let playlists: any[] = [];
let error: string | null = null;

// Load playlists
const result = await fetchPlaylist();
playlists = result.playlists;
console.log(playlists);

error = result.error;
---

<div class="youtube-feed">
  {
    error ? (
      <div class="error-message">
        <p>Error loading YouTube playlists: {error}</p>
      </div>
    ) : (
      <div class="playlists-container">
        {playlists.length > 0 ? (
          <div class="playlists-grid">
            {playlists.map((playlist) => (
              <a
                href={playlist.link}
                target="_blank"
                rel="noopener noreferrer nofollow"
                class="playlist-card"
              >
                <div class="playlist-thumbnail">
                  <img
                    src={playlist.thumbnail}
                    alt={playlist.title}
                    loading="lazy"
                  />
                  <div class="playlist-info-overlay">
                    <span class="video-count">
                      {playlist.videoCount} videos
                    </span>
                  </div>
                </div>
                <div class="playlist-info">
                  <h3 class="playlist-title">{playlist.title}</h3>
                  <p class="playlist-description">
                    {playlist.description
                      ? playlist.description.substring(0, 100) + "..."
                      : "Ver playlist completa"}
                  </p>
                  <p class="playlist-channel">{playlist.channelTitle}</p>
                </div>
              </a>
            ))}
          </div>
        ) : (
          <p>No hay playlists disponibles en este momento.</p>
        )}
      </div>
    )
  }

</div>
<style>
  .youtube-feed {
    width: 100%;
    max-width: 800px;
    margin: 0 auto;
  }

  .error-message {
    padding: 1rem;
    background-color: #fee;
    border: 1px solid #fcc;
    border-radius: 0.5rem;
    color: #c33;
  }

  .playlists-container h2 {
    margin-bottom: 1.5rem;
    font-size: 1.5rem;
    font-weight: bold;
  }

  .playlists-grid {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .playlist-card {
    background: #1a1a1a;
    display: flex;
    gap: .6rem;
    width: 100%;
    min-height: 153px;
    border-radius: 0.5rem;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s;
    text-decoration: none;
    background: var(--dark-purple);
  }

  .playlist-card:hover {
    transform: translateY(-2px);
  }

  .playlist-thumbnail {
    width: 100%;
    max-width: 20rem;
    overflow: hidden;
    @media (width <= 768px) {
      max-width: 8rem;
      max-height: fit-content;
    }
  }

  .playlist-thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }


  .playlist-info {
    padding: 1rem;
  }

  .playlist-title {
    color: var(--ufo-green);
    font-size: 1.8rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
    line-height: 1.4;
    @media (width<= 768px){
      font-size: 1rem;
    }
  }

  .playlist-description {
    color: #d4d4d4;
    font-size: 0.875rem;
    margin-bottom: 0.5rem;
    line-height: 1.4;
    @media (width <= 768px) {
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
      max-height: 3.5rem;
      max-width: 10rem;
    }
  }

  .playlist-channel {
    color: #fffb00;
    font-size: 0.75rem;
    font-weight: 500;
  }


</style>
