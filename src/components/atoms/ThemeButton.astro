---
const { position, positionStyle="absolute" } = Astro.props;

---

<script is:inline>

document.addEventListener( 'astro:page-load', () => {
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }

  window.localStorage.setItem("theme", theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");
    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");
  };

  document
    .getElementById("themeToggle")
    .addEventListener("click", handleToggleClick);
});


</script>


  <button
    id="themeToggle"
    class=`z-2 ${positionStyle} cursor-pointer flex items-center justify-center bg-black/25 backdrop-blur-sm rounded-full w-10 h-10 border border-black overflow-hidden ${position}`
  >
    <iconify-icon
      class="sun text-[#ffaa17]"
      icon="line-md:moon-alt-to-sunny-outline-loop-transition"
      width="25"
      height="25"
    ></iconify-icon>
    <iconify-icon
      class="moon fill-transparent hidden"
      icon="line-md:sunny-outline-to-moon-transition"
      width="25"
      height="25"
    ></iconify-icon>
  </button>

  <style>
    :global(.dark) #themeToggle {
      border: 1px solid aqua;
    }
    :global(.dark) .sun {
      display: none;
    }
    :global(.dark) .moon {
      display: flex;
      color: aqua;
    }
  </style>
